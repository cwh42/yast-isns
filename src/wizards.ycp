/**
 * File:	include/isns-server/wizards.ycp
 * Package:	Configuration of isns-server
 * Summary:	Wizards definitions
 * Authors:	Michal Zugec <mzugec@suse.cz>
 *
 * $Id: wizards.ycp 35355 2007-01-15 15:06:49Z mzugec $
 */

{

textdomain "isns";

import "Sequencer";
import "Wizard";

include "isns/complex.ycp";
include "isns/dialogs.ycp";


/**
 * Main workflow of the isns-server configuration
 * @return sequence result
 */
any MainSequence() {

    /* FIXME: adapt to your needs */
    map aliases = $[
	"summary"	:   ``( SummaryDialog() ),
    ];

    /* FIXME: adapt to your needs */
    map sequence = $[
	"ws_start" : "summary",
	"summary" : $[
	    `abort	: `abort,
	    `next	: `next,
	],
    ];

    any ret = Sequencer::Run(aliases, sequence);

    return ret;
}

/**
 * Whole configuration of isns-server
 * @return sequence result
 */
any IsnsServerSequence() {

    map aliases = $[
	"read"	: [ ``( ReadDialog() ), true ],
	"main"	:   ``( MainSequence() ),
	"write"	: [ ``( WriteDialog() ), true ]
    ];

    map sequence = $[
	"ws_start" : "read",
	"read" : $[
	    `abort	: `abort,
	    `next	: "main"
	],
	"main" : $[
	    `abort	: `abort,
	    `next	: "write"
	],
	"write" : $[
	    `abort	: `abort,
	    `next	: `next
	]
    ];

    Wizard::CreateDialog();
    Wizard::SetDesktopTitleAndIcon ("isns");

    any ret = Sequencer::Run(aliases, sequence);

    UI::CloseDialog();
    return ret;
}

/**
 * Whole configuration of isns-server but without reading and writing.
 * For use with autoinstallation.
 * @return sequence result
 */
any IsnsServerAutoSequence() {

    /* Initialization dialog caption */
    string caption = _("isns daemon configuration");
    /* Initialization dialog contents */
    term contents = `Label(_("Initializing..."));

    Wizard::CreateDialog();
    Wizard::SetContentsButtons(caption, contents, "",
	    Label::BackButton(), Label::NextButton());

    any ret = MainSequence();

    UI::CloseDialog();
    return ret;
}

/* EOF */
}
